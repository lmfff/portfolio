---
// Mouse-following grainy gradient effect component
---

<!-- SVG filter for grain effect -->
<svg style="position: absolute; width: 0; height: 0;">
  <defs>
    <filter id="grainFilter">
      <feTurbulence 
        type="fractalNoise" 
        baseFrequency="0.8" 
        numOctaves="2"
        seed="3"
        stitchTiles="stitch"/>
      <feColorMatrix type="saturate" values="0"/>
      <feComponentTransfer>
        <feFuncA type="discrete" tableValues="0.15 0.85 0.25 0.75 0.35 0.65 0.45 0.55"/>
      </feComponentTransfer>
      <feComposite operator="over" in2="SourceGraphic"/>
    </filter>
  </defs>
</svg>

<!-- Grain overlay -->
<div class="grain-overlay"></div>

<!-- Mouse following gradient -->
<div id="mouse-gradient" class="mouse-gradient"></div>

<!-- Organic blobs -->
<div class="blob blob-1"></div>
<div class="blob blob-2"></div>
<div class="blob blob-3"></div>

<script>
	// Mouse gradient effect
	const gradient = document.getElementById('mouse-gradient');
	let mouseX = 0;
	let mouseY = 0;
	let gradientX = 0;
	let gradientY = 0;

	if (gradient) {
		// Track mouse movement
		document.addEventListener('mousemove', (e) => {
			mouseX = e.clientX;
			mouseY = e.clientY;
		});

		// Smooth animation loop
		function animate() {
			// Smooth interpolation for organic movement
			gradientX += (mouseX - gradientX) * 0.1;
			gradientY += (mouseY - gradientY) * 0.1;

					if (gradient) {
			gradient.style.transform = `translate(${gradientX - 300}px, ${gradientY - 300}px)`;
		}
			
			requestAnimationFrame(animate);
		}

		// Start animation
		animate();

		// Hide gradient when mouse leaves the window
		document.addEventListener('mouseleave', () => {
			if (gradient) {
				gradient.style.opacity = '0';
			}
		});

		// Show gradient when mouse enters the window
		document.addEventListener('mouseenter', () => {
			if (gradient) {
				gradient.style.opacity = '1';
			}
		});
	}
</script>

<style>
	/* Grain overlay - covers entire page */
	.grain-overlay {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		pointer-events: none;
		z-index: -2;
		opacity: 0.25;
		background: #6b7280;
		filter: url(#grainFilter);
	}

	/* Animated organic blobs */
	.blob {
		position: fixed;
		z-index: -1;
		pointer-events: none;
		filter: blur(60px);
		mix-blend-mode: screen;
	}

	.blob-1 {
		width: 400px;
		height: 400px;
		background: rgba(58, 153, 144, 0.4); /* #3a9990 */
		animation: move-blob-1 30s infinite alternate;
	}

	.blob-2 {
		width: 300px;
		height: 350px;
		background: rgba(50, 80, 146, 0.35); /* #325092 */
		animation: move-blob-2 35s infinite alternate;
	}

	.blob-3 {
		width: 350px;
		height: 300px;
		background: rgba(54, 117, 119, 0.3); /* Intermediate tone */
		animation: move-blob-3 25s infinite alternate;
	}

	@keyframes move-blob-1 {
		from {
			transform: translate(-10vw, -10vh) scale(1) rotate(0deg);
			border-radius: 47% 53% 70% 30% / 30% 50% 50% 70%;
		}
		to {
			transform: translate(60vw, 70vh) scale(1.4) rotate(180deg);
			border-radius: 70% 30% 50% 50% / 50% 30% 70% 50%;
		}
	}

	@keyframes move-blob-2 {
		from {
			transform: translate(80vw, 10vh) scale(1) rotate(0deg);
			border-radius: 53% 47% 30% 70% / 50% 70% 30% 50%;
		}
		to {
			transform: translate(10vw, -20vh) scale(0.8) rotate(270deg);
			border-radius: 30% 70% 53% 47% / 70% 50% 50% 30%;
		}
	}

	@keyframes move-blob-3 {
		from {
			transform: translate(50vw, 80vh) scale(1.2) rotate(0deg);
			border-radius: 47% 53% 50% 50% / 70% 30% 70% 30%;
		}
		to {
			transform: translate(-20vw, 30vh) scale(0.9) rotate(90deg);
			border-radius: 50% 50% 30% 70% / 30% 70% 50% 50%;
		}
	}

	/* Mouse-following gradient */
	.mouse-gradient {
		position: fixed;
		top: 0;
		left: 0;
		width: 600px;
		height: 600px;
		pointer-events: none;
		z-index: -1;
		opacity: 0;
		transition: opacity 0.3s ease;
		
		/* Clean gradient - lighter and more subtle */
		background: radial-gradient(
			circle at center,
			rgba(58, 153, 144, 0.3) 0%,   /* Lighter #3a9990 */
			rgba(54, 117, 119, 0.2) 30%,  /* Lighter Intermediate */
			rgba(50, 80, 146, 0.15) 60%,   /* Lighter #325092 */
			transparent 80%
		);
		
		/* Blur for soft effect */
		filter: blur(40px);
		mix-blend-mode: screen;
	}

	/* Show gradient when mouse is active */
	body:hover .mouse-gradient {
		opacity: 1;
	}

	/* Reduced motion preference */
	@media (prefers-reduced-motion: reduce) {
		.grain-overlay,
		.mouse-gradient {
			display: none;
		}
	}
</style> 